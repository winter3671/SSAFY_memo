## 백준 10810번: 공넣기
- 입력
첫째 줄에 N (1 ≤ N ≤ 100)과 M (1 ≤ M ≤ 100)이 주어진다.
둘째 줄부터 M개의 줄에 걸쳐서 공을 넣는 방법이 주어진다. 각 방법은 세 정수 i j k로 이루어져 있으며, i번 바구니부터 j번 바구니까지에 k번 번호가 적혀져 있는 공을 넣는다는 뜻이다. 예를 들어, 2 5 6은 2번 바구니부터 5번 바구니까지에 6번 공을 넣는다는 뜻이다. (1 ≤ i ≤ j ≤ N, 1 ≤ k ≤ N)
도현이는 입력으로 주어진 순서대로 공을 넣는다.

- 출력
1번 바구니부터 N번 바구니에 들어있는 공의 번호를 공백으로 구분해 출력한다. 공이 들어있지 않은 바구니는 0을 출력한다.

- 예제 입력
5 4
1 2 3
3 4 4
1 4 1
2 2 2

- 예제 출력
1 2 1 1 0

- 내가 작성한 코드
N, M = map(int, input().split())

list_ball = [0]*N

for _ in range(M):
    i, j, k = map(int, input().split())
    list_ball[i-1:j] = [k]*(j-i+1)

print(list_ball)

- 문제점
  - 코드상의 문제는 없는데, 마지막 print 부분에서 list형식(대괄호 포함)으로 출력됨
  - [1, 2, 1, 1, 0]

- 새로 알게 된 점
  - 리스트를 언패킹(unpacking)하는 방법
  - print(*[1, 2, 3])은 print(1, 2, 3)과 똑같이 작동함
  - print는 기본적으로 공백으로 리스트의 숫자들을 구분하는데, print 함수 안에 sep=','를 넣어주면 쉼표로 구분가능

- 코드 수정
N, M = map(int, input().split())

list_ball = [0]*N

for _ in range(M):
    i, j, k = map(int, input().split())
    list_ball[i-1:j] = [k]*(j-i+1)

print(*list_ball)